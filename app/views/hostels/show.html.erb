
<!--   <div class="carouselcontainerself"> -->
<div class="container">
  <div id="carouselExampleControls" class="carousel slide" data-ride="carousel">
    <div class="carousel-inner">
      <div class="carousel-item active">
        <div class="carousel-image" style="background-image: url(<%= @hostel.photo1 %>);"></div>
        <!-- <img class="d-block h-100" alt="First slide" src=<%#= @hostel.photo1 %>> -->
      </div>
      <div class="carousel-item">
        <div class="carousel-image" style="background-image: url(<%= @hostel.photo2 %>);"></div>
        <!-- <img class="d-block h-100" alt="Second slide" src=<%=  %>> -->
      </div>
      <div class="carousel-item">
        <div class="carousel-image" style="background-image: url(<%= @hostel.photo3 %>);"></div>
        <!-- <img class="d-block h-100" alt="Third slide" src=<%=  %>> -->
      </div>
    </div>
    <a class="carousel-control-prev" href="#carouselExampleControls" role="button" data-slide="prev">
      <span class="carousel-control-prev-icon" aria-hidden="true"></span>
      <span class="sr-only">Previous</span>
    </a>
    <a class="carousel-control-next" href="#carouselExampleControls" role="button" data-slide="next">
      <span class="carousel-control-next-icon" aria-hidden="true"></span>
      <span class="sr-only">Next</span>
    </a>
  </div>
</div>

<div class="introduction-show">
 <div id="header-container">
  <h1 id="title-h1"><strong><%= @hostel.name %></strong></h1>
  <h2 id="title-h2"><%= @hostel.address %></h2>
 </div>

 <div id="emoji-index">
  <% if @hostel.reviews.present? %>
    <% ["bad experience", "normal experience", "fun experience", "amazing experience"].each do |emoji| %>
       <% case emoji %>
        <% when "bad experience" %>
         <span id="crying-emoji">üò≠ <%= @hostel.reviews.where(emoji: emoji ).count  %> bad experiences</span>
        <% when "normal experience" %>
         <span id="normal-emoji">üòê <%= @hostel.reviews.where(emoji: emoji ).count %> normal experiences</span>
        <% when "fun experience" %>
         <span id="happy-emoji">üòÉ <%= @hostel.reviews.where(emoji: emoji ).count %> fun experiences</span>
        <% when "amazing experience" %>
         <span>üòç <%= @hostel.reviews.where(emoji: emoji ).count %> amazing experiences</span>
       <% end %>
     <% end %>
  <% end %>
 </div>
</div>


<% if user_signed_in? && current_user.user_type == "owner" %>
  <div class="buttons">
    <button class="btn-blue">
      <%= link_to "Add Room", new_hostel_bed_path(@hostel) %>
    </button>
    <button class="btn-blue">
      <%= link_to "Edit", edit_hostel_path(@hostel) %>
    </button>
  </div>
<% end %>

<!-- emojis end here -->

<hr>
<!-- Hostel description -->
<div class="flex">
  <div class="panel-body" role="main">
    <h1 class="text-center"><strong>Description</strong></h1>

      <p class="text-center"><%= simple_format(@hostel.description) %></p>

  </div>
<div id="inputs-container">
    <ul>
      <%= simple_form_for [@hostel, @booking] do |f| %>
      <%= f.hidden_field :hostel_id, :value => params[:id] %>
      <!-- <div class="input-items1"> -->
        <%= f.input :start_at, as: :string, required: true, input_html: {class: "datepicker", value: params[:checkin]}, wrapper_html: {class: "input-items1"}, placeholder: "Check-in" %>
        <%= f.input :end_at, as: :string, label: 'End Date'.html_safe, placeholder: "Check-out", required: true, input_html: {class: "datepicker", value: params[:checkout]}, wrapper_html: {class: "input-items1"}, id: "end_at"%>
      <!-- </div> -->
      <!-- line break for readability -->
        <div class="input-items">

          <div class="form-group select required booking_other_bed_number input-items2"><label class="form-control-label select required" for="booking_other_bed_number">Number of Guests <abbr title="required">*</abbr></label><select class="form-control select required" name="booking[other][bed_number]" id="booking_other_bed_number">
            <option value="" disabled selected hidden>Number of Guests</option>
            <option value="1">1</option>
            <option value="2">2</option>
            <option value="3">3</option>
            <option value="4">4</option>
            <option value="5">5</option>
            <option value="6">6</option>
            <option value="7">7</option>
            <option value="8">8</option>
            <option value="9">9</option>
            <option value="10">10</option></select>
          </div>
          <div class="form-group select required booking_other_room_type input-items2"><label class="form-control-label select required" for="booking_other_room_type">Room Type <abbr title="required">*</abbr></label>
            <select class="form-control select required" placeholder="Room Type" name="booking[other][room_type]" id="booking_other_room_type">
              <option value="" disabled selected hidden>Room Type</option>
              <option value="10 bed">10 bed</option>
              <option value="8 bed">8 bed</option>
              <option value="6 bed">6 bed</option>
              <option value="4 bed">4 bed</option>
              <option value="private">private</option>
            </select>
          </div>
          <!-- Need to add reg_ex to ensure that users can only choose an appropriate number of beds for the room type -->
          <!-- make dynamic booking bed count by altering line 48 -->
        </div>
          <!-- Need to add reg_ex to ensure that users can only choose an appropriate number of beds for the room type -->
          <!-- make dynamic booking bed count by altering line 48 -->
      <div id="booking-button-div">
        <input type="submit" name="commit" value="Create Booking" class="booking-button" data-disable-with="Create Booking">
      </div>
      <% end %>
      <div id="price-container"></div>

    </ul>
    <div id="price-display">
   <table id="price-table">
    <tr>
      <th><strong>Room Type<strong></th>
      <th><strong>Price<strong></th>
    </tr>
    <tr>
      <th><%= @tenbed[:type] %></th>
      <th><%= number_to_currency((@tenbed[:price] / 100), unit: "¬£") %></th>
    </tr>
    <tr>
      <th><%= @eightbed[:type] %></th>
      <th><%= number_to_currency(@eightbed[:price] / 100, unit: "¬£") %></th>
    </tr>
    <tr>
      <th><%= @sixbed[:type] %></th>
      <th><%= number_to_currency(@sixbed[:price] / 100, unit: "¬£") %></th>
    </tr>
    <tr>
      <th><%= @fourbed[:type] %></th>
      <th>
    <%= number_to_currency(@fourbed[:price] / 100, unit: "¬£") %></th>
    </tr>
    <tr>
      <th><%= @private[:type] %></th>
      <th><%= number_to_currency(@private[:price] / 100, unit: "¬£") %></th>
    </tr>
   </table>
  </div>
  </div>
  <div id="cashback-display">


  </div>
</div>



<!-- need to add center buttons here -->



<!-- emojis start below -->


<!-- emojis end here -->
 <hr>

<!-- This is where beds are going to be listed -->

<div id="map-container-show">
  <div
    id="map"
    style="width: 100%;
    height: 600px;"
    data-markers="<%= [@marker].to_json %>"
    data-mapbox-api-key="<%= ENV['MAPBOX_API_KEY'] %>"
  ></div>
</div>

<script>
  const priceContainer = document.getElementById("price-container");
  const roomTypeSelect = document.getElementById("booking_other_room_type");

  var date_diff_indays = function(date1, date2) {
    dt1 = new Date(date1);
    dt2 = new Date(date2);
    return Math.floor((Date.UTC(dt2.getFullYear(), dt2.getMonth(), dt2.getDate()) - Date.UTC(dt1.getFullYear(), dt1.getMonth(), dt1.getDate()) ) /(1000 * 60 * 60 * 24));
  }

  roomTypeSelect.addEventListener("change", (event) => {
    const startDate = document.getElementById("booking_start_at").value;
    const endDate = document.getElementById("booking_end_at").value;
    const numGuests = document.getElementById("booking_other_bed_number").value;
    const roomType = roomTypeSelect.value;
    const numDays = date_diff_indays(new Date(startDate), new Date(endDate));
    const roomPrices = [38, 27, 24, 16, 12]
    let priceOfRoom = 0
    switch(roomType) {
      case "private":
        priceOfRoom = roomPrices[0];
      case "4 bed":
        priceOfRoom = roomPrices[1];
      case "6 bed":
        priceOfRoom = roomPrices[2];
      case "8 bed":
        priceOfRoom = roomPrices[3];
      case "10 bed":
        priceOfRoom = roomPrices[4];
    }
    const price = `${priceOfRoom * numDays * numGuests}`;
    priceContainer.insertAdjacentHTML("afterbegin", price);
  });

</script>

<!-- This is required to make a form to choose beds in different rooms, where beds are going to be listed -->

